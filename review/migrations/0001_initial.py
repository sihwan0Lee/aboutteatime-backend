# Generated by Django 3.0.6 on 2020-05-31 02:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0001_initial'),
        ('item', '0001_initial'),
        ('store', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ItemReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=500)),
                ('overall_rating', models.DecimalField(decimal_places=2, max_digits=4)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'item_reviews',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('rating', models.IntegerField()),
            ],
            options={
                'db_table': 'rating_conversions',
            },
        ),
        migrations.CreateModel(
            name='StoreReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=1000)),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'store_reviews',
            },
        ),
        migrations.CreateModel(
            name='StoreReviewLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='review.StoreReview')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.User')),
            ],
            options={
                'db_table': 'store_review_likes',
            },
        ),
        migrations.CreateModel(
            name='StoreReviewImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.URLField(max_length=3000)),
                ('review', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='images', to='review.StoreReview')),
            ],
            options={
                'db_table': 'store_review_images',
            },
        ),
        migrations.AddField(
            model_name='storereview',
            name='liked_by',
            field=models.ManyToManyField(related_name='liked_store_reviews', through='review.StoreReviewLike', to='user.User'),
        ),
        migrations.AddField(
            model_name='storereview',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Store'),
        ),
        migrations.AddField(
            model_name='storereview',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.User'),
        ),
        migrations.CreateModel(
            name='ItemReviewLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='likes', to='review.ItemReview')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.User')),
            ],
            options={
                'db_table': 'item_review_likes',
            },
        ),
        migrations.CreateModel(
            name='ItemReviewImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.URLField(max_length=3000)),
                ('reivew', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='images', to='review.ItemReview')),
            ],
            options={
                'db_table': 'item_review_images',
            },
        ),
        migrations.AddField(
            model_name='itemreview',
            name='fragrance_rating',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fragrance', to='review.Rating'),
        ),
        migrations.AddField(
            model_name='itemreview',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='item.Item'),
        ),
        migrations.AddField(
            model_name='itemreview',
            name='liked_by',
            field=models.ManyToManyField(related_name='liked_item_reviews', through='review.ItemReviewLike', to='user.User'),
        ),
        migrations.AddField(
            model_name='itemreview',
            name='packaging_rating',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='packaging', to='review.Rating'),
        ),
        migrations.AddField(
            model_name='itemreview',
            name='taste_rating',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taste', to='review.Rating'),
        ),
        migrations.AddField(
            model_name='itemreview',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.User'),
        ),
    ]
